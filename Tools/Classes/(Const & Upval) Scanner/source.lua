-- tbl deep search 
local tblSearch = loadstring(game:HttpGet("https://raw.githubusercontent.com/sinkZq/Exploit-tools/main/Tools/Classes/(Tbl)%20Deep-Search/source.lua"))()


-- const upval scanner (class)
local scannerClass = {}
scannerClass.__index = scannerClass

function scannerClass.new(_function: Function, _scanType)
    assert(type(_function) == "function", "#1 Argument passed must be a function")
    assert(islclosure(_function), "function passed must be a Lclosure")
    assert(_scanType == "getconstants" or _scanType == "getupvalues", "#2 Argument passed must be a string (getconstants or getupvalues)")

    local self = setmetatable({}, scannerClass)

    self.scanFunction = _function
    self.scanType = string.lower(_scanType)
    self.scanResult = "{}"

    return self 
end

-- get scan type
function scannerClass:getScan() 
    if self.scanType == "getconstants" then
        self.scanResult = tblSearch.new(getconstants(self.scanFunction))
        self.scanResult = self.scanResult:deepSearch()
    elseif self.scanType == "getupvalues" then
        self.scanResult = tblSearch.new(getupvalues(self.scanFunction))
        self.scanResult = self.scanResult:deepSearch()
    end

    return self.scanResult
end

-- scan for specific const upval request 
function scannerClass:specificScan(const_upval: string)
    assert(type(const_upval) == "string", "#1 Argument passed must be a string")

    self.scanResult = scannerClass:getScan()
    self.scanResult = string.split(self.scanResult, "\n")

    print(self.scanResult)

    for i,v in self.scanResult do
        if v == const_upval then
            print("found const/upval : ", i, v, "â”‚ const/upval peer = ", self.scanFunction)
        end
    end

    return self.scanResult
end

-- scan entire function for const upval
--[[function scannerClass:generalScan()
  
end
]]

return scannerClass
