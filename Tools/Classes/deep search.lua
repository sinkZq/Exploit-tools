
-- deep search class 
local search = {}
search.__index = search

function search.new(_table: table)
    local self = setmetatable({}, search)

    self.deepSearchTable = _table or {}
    self.searched = {}

    return self 
end

function search:deepSearch()
    assert(type(self.deepSearchTable) == "table" and type(self.searched) == "table", "Argument passed must be a table")

    local function recursiveLoop(_table: table)
        if type(_table) == "table" then
            for i, v in pairs(_table) do
                if type(v) == "table" then
                    recursiveLoop(v)
                else
                    table.insert(self.searched, v)
                end
            end
        end
    end

    recursiveLoop(self.deepSearchTable)

    return table.concat(self.searched, "\n")
end

return search
